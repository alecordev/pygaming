"""
Copyright (C) ColdStars, Aleksandr Pivovarov <<coldstars8@gmail.com>>

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
"""


######### OPTIONS
OLD_HARDWARE = False
GAME_FPS_LIMIT = 60

VIEW_WIDTH, VIEW_HEIGHT = 1024, 768
TITLE = "coldStars V0.0.3.51"

TURN_TIME = 150  # turn time, depends on game fps
#############################################


import OpenGL

OpenGL.ERROR_CHECKING = False
OpenGL.ERROR_LOGGING = False

from OpenGL.GL import *
from OpenGL.GLU import *

import os, pygame, sys
from pygame.locals import *

from math import cos, sin, atan2, atan, pi

from random import randint

import glFreeType

from view import *


class IDGenerator:
    def __init__(self):
        self.ID = 0
        self._list = []

    def returnNextID(self, description="---"):
        self.ID += 1
        self._list.append((self.ID, description))
        return self.ID

    def returnDescriptionStrByTypeId(self, target_id):
        for i in self._list:
            (_id, id_str) = i
            if _id == target_id:
                return id_str
        return "---"


DEGREES_IN_RADIAN = 180 / pi
DEGREES_90_IN_RADIAN = pi / 2


ENTITY_ID_GENERATOR = IDGenerator()
TEXTURE_ID_GENERATOR = IDGenerator()
TYPE_ID_GENERATOR = IDGenerator()


########### TEXTURE TYPES
SPUTNIK_TEXTURE_ID = TYPE_ID_GENERATOR.returnNextID("SPUTNIK_TEXTURE_ID")
SHIP_TEXTURE_ID = TYPE_ID_GENERATOR.returnNextID("SHIP_TEXTURE_ID")
STAR_TEXTURE_ID = TYPE_ID_GENERATOR.returnNextID("STAR_TEXTURE_ID")
NEBULA_TEXTURE_ID = TYPE_ID_GENERATOR.returnNextID("NEBULA_TEXTURE_ID")
PLANET_TEXTURE_ID = TYPE_ID_GENERATOR.returnNextID("PLANET_TEXTURE_ID")
LAND_BG_TEXTURE_ID = TYPE_ID_GENERATOR.returnNextID("LAND_BG_TEXTURE_ID")

ANGAR_BG_TEXTURE_ID = TYPE_ID_GENERATOR.returnNextID("ANGAR_BG_TEXTURE_ID")
STORE_BG_TEXTURE_ID = TYPE_ID_GENERATOR.returnNextID("STORE_BG_TEXTURE_ID")
SHOP_BG_TEXTURE_ID = TYPE_ID_GENERATOR.returnNextID("SHOP_BG_TEXTURE_ID")
GOVERMENT_BG_TEXTURE_ID = TYPE_ID_GENERATOR.returnNextID("GOVERMENT_BG_TEXTURE_ID")

PARTICLE_TEXTURE_ID = TYPE_ID_GENERATOR.returnNextID("PARTICLE_TEXTURE_ID")
DISTANTSTAR_TEXTURE_ID = TYPE_ID_GENERATOR.returnNextID("DISTANTSTAR_TEXTURE_ID")
LAZER_EFFECT_TEXTURE_ID = TYPE_ID_GENERATOR.returnNextID("LAZER_EFFECT_TEXTURE_ID")
SHIELD_EFFECT_TEXTURE_ID = TYPE_ID_GENERATOR.returnNextID("SHIELD_EFFECT_TEXTURE_ID")
FACE_TEXTURE_ID = TYPE_ID_GENERATOR.returnNextID("FACE_TEXTURE_ID")
ASTEROID_TEXTURE_ID = TYPE_ID_GENERATOR.returnNextID("ASTEROID_TEXTURE_ID")
MINERAL_TEXTURE_ID = TYPE_ID_GENERATOR.returnNextID("MINERAL_TEXTURE_ID")
CONTAINER_TEXTURE_ID = TYPE_ID_GENERATOR.returnNextID("CONTAINER_TEXTURE_ID")
BOMB_TEXTURE_ID = TYPE_ID_GENERATOR.returnNextID("BOMB_TEXTURE_ID")
BLACKHOLE_TEXTURE_ID = TYPE_ID_GENERATOR.returnNextID("BLACKHOLE_TEXTURE_ID")


######### TEXTURES FOR ITEMS
DRIVE_ITEM_TEXTURE_ID = TYPE_ID_GENERATOR.returnNextID("DRIVE_ITEM_TEXTURE_ID")
LAZER_ITEM_TEXTURE_ID = TYPE_ID_GENERATOR.returnNextID("LAZER_ITEM_TEXTURE_ID")
ROCKET_ITEM_TEXTURE_ID = TYPE_ID_GENERATOR.returnNextID("ROCKET_ITEM_TEXTURE_ID")
TORPED_ITEM_TEXTURE_ID = TYPE_ID_GENERATOR.returnNextID("TORPED_ITEM_TEXTURE_ID")
PROTECTOR_ITEM_TEXTURE_ID = TYPE_ID_GENERATOR.returnNextID("PROTECTOR_ITEM_TEXTURE_ID")
DROID_ITEM_TEXTURE_ID = TYPE_ID_GENERATOR.returnNextID("DROID_ITEM_TEXTURE_ID")
GRAPPLE_ITEM_TEXTURE_ID = TYPE_ID_GENERATOR.returnNextID("GRAPPLE_ITEM_TEXTURE_ID")
BAK_ITEM_TEXTURE_ID = TYPE_ID_GENERATOR.returnNextID("BAK_ITEM_TEXTURE_ID")
ENERGYBLOCK_ITEM_TEXTURE_ID = TYPE_ID_GENERATOR.returnNextID(
    "ENERGYBLOCK_ITEM_TEXTURE_ID"
)
FREEZER_ITEM_TEXTURE_ID = TYPE_ID_GENERATOR.returnNextID("FREEZER_ITEM_TEXTURE_ID")
RADAR_ITEM_TEXTURE_ID = TYPE_ID_GENERATOR.returnNextID("RADAR_ITEM_TEXTURE_ID")
SCANER_ITEM_TEXTURE_ID = TYPE_ID_GENERATOR.returnNextID("SCANER_ITEM_TEXTURE_ID")


######### TEXTURES FOR BULLET
ROCKET_BULLET_TEXTURE_ID = TYPE_ID_GENERATOR.returnNextID()
TORPED_BULLET_TEXTURE_ID = TYPE_ID_GENERATOR.returnNextID()

### AI section start
# global task
DEFEND_SHIP_quest_id = TYPE_ID_GENERATOR.returnNextID()
AREST_SHIP_quest_id = TYPE_ID_GENERATOR.returnNextID()
TERROR_SHIP_quest_id = TYPE_ID_GENERATOR.returnNextID()
TRADE_GOODS_quest_id = TYPE_ID_GENERATOR.returnNextID()
DIPLOMACY_VISIT_quest_id = TYPE_ID_GENERATOR.returnNextID()
STARSYSTEM_LIBERATION_quest_id = TYPE_ID_GENERATOR.returnNextID()

# dynamic tasks (are aded if they are necesary)
TASK_COMPLETED_id = TYPE_ID_GENERATOR.returnNextID()
DESTROY_ASTEROID_task_id = TYPE_ID_GENERATOR.returnNextID()
HYPER_JUMP_task_id = TYPE_ID_GENERATOR.returnNextID()
# SELFPRESERVATION_task_id      = TYPE_ID_GENERATOR.returnNextID()
LAUNCHING_task_id = TYPE_ID_GENERATOR.returnNextID()
LANDING_task_id = TYPE_ID_GENERATOR.returnNextID()
GRABBING_MINERAL_task_id = TYPE_ID_GENERATOR.returnNextID()
GRABBING_CONTAINER_task_id = TYPE_ID_GENERATOR.returnNextID()

REPAIR_NEEDED_id = TYPE_ID_GENERATOR.returnNextID()
FUEL_NEEDED_id = TYPE_ID_GENERATOR.returnNextID()
ROCKET_RELOAD_NEEDED_id = TYPE_ID_GENERATOR.returnNextID()
BUY_NEEDED_id = TYPE_ID_GENERATOR.returnNextID()
SELL_NEEDED_id = TYPE_ID_GENERATOR.returnNextID()

# end dynamic tasks
DESTROY_ALIEN_task_id = TYPE_ID_GENERATOR.returnNextID()

AREST_REQUEST_task_id = TYPE_ID_GENERATOR.returnNextID()
TERROR_REQUEST_task_id = TYPE_ID_GENERATOR.returnNextID()

FIRE_LOW_task_id = TYPE_ID_GENERATOR.returnNextID()
FIRE_HIGH_task_id = TYPE_ID_GENERATOR.returnNextID()

FIND_PLACE_TO_SELL_GOODS_task_id = TYPE_ID_GENERATOR.returnNextID()
BUY_GOODS_task_id = TYPE_ID_GENERATOR.returnNextID()
SELL_GOODS_task_id = TYPE_ID_GENERATOR.returnNextID()
### END AI ssection


RACE_0_ID = TYPE_ID_GENERATOR.returnNextID()  # texnologi
RACE_1_ID = TYPE_ID_GENERATOR.returnNextID()  # voiny
RACE_2_ID = TYPE_ID_GENERATOR.returnNextID()  # zhuliki
RACE_3_ID = TYPE_ID_GENERATOR.returnNextID()  # humans
RACE_4_ID = TYPE_ID_GENERATOR.returnNextID()  # bio

RACE_6_ID = TYPE_ID_GENERATOR.returnNextID()  # replikatory
RACE_7_ID = TYPE_ID_GENERATOR.returnNextID()  # shadow

KORPUS_ID = TYPE_ID_GENERATOR.returnNextID()
SHIP_ID = TYPE_ID_GENERATOR.returnNextID()

RANGER_ID = TYPE_ID_GENERATOR.returnNextID()
WARRIOR_ID = TYPE_ID_GENERATOR.returnNextID()
PIRAT_ID = TYPE_ID_GENERATOR.returnNextID()
TRADER_ID = TYPE_ID_GENERATOR.returnNextID()
DIPLOMAT_ID = TYPE_ID_GENERATOR.returnNextID()

WEAPON_ID = TYPE_ID_GENERATOR.returnNextID()
LAZER_ID = TYPE_ID_GENERATOR.returnNextID()
ROCKET_ID = TYPE_ID_GENERATOR.returnNextID()
TORPED_ID = TYPE_ID_GENERATOR.returnNextID()

EQUIPMENT_ID = TYPE_ID_GENERATOR.returnNextID()
ENERGYBLOCK_ID = TYPE_ID_GENERATOR.returnNextID()
FREEZER_ID = TYPE_ID_GENERATOR.returnNextID()
GRAPPLE_ID = TYPE_ID_GENERATOR.returnNextID()
RADAR_ID = TYPE_ID_GENERATOR.returnNextID()
DRIVE_ID = TYPE_ID_GENERATOR.returnNextID()
PROTECTOR_ID = TYPE_ID_GENERATOR.returnNextID()
BAK_ID = TYPE_ID_GENERATOR.returnNextID()
DROID_ID = TYPE_ID_GENERATOR.returnNextID()
SCANER_ID = TYPE_ID_GENERATOR.returnNextID()

ALL_EQUIPMENT_ID_list = [
    LAZER_ID,
    ROCKET_ID,
    ENERGYBLOCK_ID,
    GRAPPLE_ID,
    RADAR_ID,
    DRIVE_ID,
    PROTECTOR_ID,
    BAK_ID,
    DROID_ID,
    SCANER_ID,
]

MODULE_ID = TYPE_ID_GENERATOR.returnNextID()
INSERTED_MODULE_SIZE = 20

MINERAL_id = TYPE_ID_GENERATOR.returnNextID()
CONTAINER_ID = TYPE_ID_GENERATOR.returnNextID()
BOMB_ID = TYPE_ID_GENERATOR.returnNextID()

OTSEC_SLOT_ID = TYPE_ID_GENERATOR.returnNextID()
GATE_SLOT_ID = TYPE_ID_GENERATOR.returnNextID()
STORE_SLOT_ID = TYPE_ID_GENERATOR.returnNextID()
ANGAR_SLOT_ID = TYPE_ID_GENERATOR.returnNextID()

NEBULA_ID = TYPE_ID_GENERATOR.returnNextID()
STAR_ID = TYPE_ID_GENERATOR.returnNextID()
PLANET_ID = TYPE_ID_GENERATOR.returnNextID()
PLANET_INHABITED_ID = TYPE_ID_GENERATOR.returnNextID()
PLANET_UNINHABITED_ID = TYPE_ID_GENERATOR.returnNextID()

PLANET_EARTH_SURFACE_ID = TYPE_ID_GENERATOR.returnNextID()  # 0
PLANET_WATER_SURFACE_ID = TYPE_ID_GENERATOR.returnNextID()  # 1
PLANET_LAVA_SURFACE_ID = TYPE_ID_GENERATOR.returnNextID()  # 2
PLANET_ICE_SURFACE_ID = TYPE_ID_GENERATOR.returnNextID()  # 3
PLANET_GAS_SURFACE_ID = TYPE_ID_GENERATOR.returnNextID()  # 4

PLANET_SURFACE_list = [
    PLANET_EARTH_SURFACE_ID,
    PLANET_WATER_SURFACE_ID,
    PLANET_LAVA_SURFACE_ID,
    PLANET_ICE_SURFACE_ID,
    PLANET_GAS_SURFACE_ID,
]

RACE_0_PLANET_SURFACE_list = [PLANET_EARTH_SURFACE_ID, PLANET_LAVA_SURFACE_ID]
RACE_1_PLANET_SURFACE_list = [PLANET_EARTH_SURFACE_ID, PLANET_LAVA_SURFACE_ID]
RACE_2_PLANET_SURFACE_list = [PLANET_EARTH_SURFACE_ID, PLANET_LAVA_SURFACE_ID]
RACE_3_PLANET_SURFACE_list = [PLANET_WATER_SURFACE_ID, PLANET_ICE_SURFACE_ID]
RACE_4_PLANET_SURFACE_list = [PLANET_WATER_SURFACE_ID, PLANET_ICE_SURFACE_ID]

ASTEROID_ID = TYPE_ID_GENERATOR.returnNextID()
SPUTNIK_ID = TYPE_ID_GENERATOR.returnNextID()
BLACKHOLE_ID = TYPE_ID_GENERATOR.returnNextID()

RACES_LIST = [
    RACE_0_ID,
    RACE_1_ID,
    RACE_2_ID,
    RACE_3_ID,
    RACE_4_ID,
    RACE_6_ID,
    RACE_7_ID,
]
RACES_GOOD_LIST = [RACE_0_ID, RACE_1_ID, RACE_2_ID, RACE_3_ID, RACE_4_ID]
RACES_EVIL_LIST = [RACE_6_ID, RACE_7_ID]

RACE_0_TECH_RATE = 2.0
RACE_1_TECH_RATE = 1.5
RACE_2_TECH_RATE = 1.1
RACE_3_TECH_RATE = 1.8
RACE_4_TECH_RATE = 1.7

RACE_6_TECH_RATE = 3.0
RACE_7_TECH_RATE = 3.0

NPC_TYPE_LIST = [RANGER_ID, WARRIOR_ID, PIRAT_ID, TRADER_ID, DIPLOMAT_ID]


SIZE_0 = 20  # 0 - up to 20x20
SIZE_1 = 40  # 1 - up to 40x40
SIZE_2 = 60  # 2 - up to 60x60
SIZE_3 = 80  # 3 - up to 80x80
SIZE_4 = 100  # 4 - up to 100x100
SIZE_5 = 130  # 5 - up to 130x130
SIZE_6 = 160  # 6 - up to 160x160
SIZE_7 = 200  # 7 - up to 200x200
SIZE_8 = 240  # 8 - up to 240x240

EXPLOSION_SIZE_RATE = 4


INTERFACE_ICON_SIZE = 25

KORPUS_SPACE_MIN = 350
KORPUS_SPACE_MAX = 900
KORPUS_PROTECTION_MIN = 0
KORPUS_PROTECTION_MAX = 20
KORPUS_NOMINAL_TEMP_MIN = 150
KORPUS_NOMINAL_TEMP_MAX = 400

VISIBLE_OFFSET = 300

MAPOFFSETX = 60
MAPOFFSETY = 60

global_STARSYSTEM_list = []
global_STARSYSTEM_CAPTURED_list = []
global_STARSYSTEM_FREE_list = []
global_hSTARSYSTEM_list = []

global_STAR_list = []
global_PLANET_list = []
global_SHIP_list = []
global_SPUTNIK_list = []


LETTER_WIDTH = 7 + 1
LETTER_WIDTH_empty = 1 + 1
LETTER_HEIGHT = 9
LETTER_HEIGHT_empty = 13

# define sun system size
WORLD_CENTERX, WORLD_CENTERY = 0, 0

############ shop goods
GOOD_WEIGHT = 1

GOODS_id = TYPE_ID_GENERATOR.returnNextID()
FOOD_id = TYPE_ID_GENERATOR.returnNextID()
MEDICINE_id = TYPE_ID_GENERATOR.returnNextID()
MILITARY_id = TYPE_ID_GENERATOR.returnNextID()
DRUG_id = TYPE_ID_GENERATOR.returnNextID()
EXCLUSIVE_id = TYPE_ID_GENERATOR.returnNextID()

MINERALS_AMOUNT_MIN = 50
MINERALS_AMOUNT_MAX = 1000
MINERAL_BASE_PRICE = 10

FOOD_AMOUNT_MIN = 60
FOOD_AMOUNT_MAX = 900
FOOD_BASE_PRICE = 11

MEDICINE_AMOUNT_MIN = 40
MEDICINE_AMOUNT_MAX = 100
MEDICINE_BASE_PRICE = 12

MILITARY_AMOUNT_MIN = 30
MILITARY_AMOUNT_MAX = 100
MILITARY_BASE_PRICE = 13

DRUG_AMOUNT_MIN = 10
DRUG_AMOUNT_MAX = 100
DRUG_BASE_PRICE = 30

EXCLUSIVE_AMOUNT_MIN = 40
EXCLUSIVE_AMOUNT_MAX = 250
EXCLUSIVE_BASE_PRICE = 30

############# items parameters #######
WEAPON_SLOTS_MAX_NUM = 5

BOMB_ARMOR_MIN = 2
BOMB_ARMOR_MAX = 8
BOMB_MASS_MIN = 10
BOMB_MASS_MAX = 25
BOMB_RADIUS_MIN = 100
BOMB_RADIUS_MAX = 700
BOMB_DAMAGE_MIN = 800
BOMB_DAMAGE_MAX = 3000
BOMB_SPEED_MIN = 2
BOMB_SPEED_MAX = 3

GENERATOR_ENERGY_MIN = 2000
GENERATOR_ENERGY_MAX = 10000
GENERATOR_RESTORATION_MIN = 20
GENERATOR_RESTORATION_MAX = 100
GENERATOR_MODULES_NUM_MIN = 0
GENERATOR_MODULES_NUM_MAX = 2

GENERATOR_MASS_MIN = 20
GENERATOR_MASS_MAX = 80
GENERATOR_CONDITION_MIN = 1000
GENERATOR_CONDITION_MAX = 4000

GENERATOR_ENERGY_WEIGHT = 0.4
GENERATOR_RESTORATION_WEIGHT = 0.4
GENERATOR_MODULES_NUM = 0.2

GENERATOR_MODULE_ENERGY_MIN = 0
GENERATOR_MODULE_ENERGY_MAX = 25
GENERATOR_MODULE_RESTORATION_MIN = 0
GENERATOR_MODULE_RESTORATION_MAX = 25

FREEZER_FREEZE_MIN = 1
FREEZER_FREEZE_MAX = 5
FREEZER_MODULES_NUM_MIN = 0
FREEZER_MODULES_NUM_MAX = 2
FREEZER_MASS_MIN = 10
FREEZER_MASS_MAX = 20
FREEZER_CONDITION_MIN = 3000
FREEZER_CONDITION_MAX = 4000

FREEZER_FREEZE_WEIGHT = 0.5
FREEZER_MODULES_NUM_WEIGHT = 0.5

FREZZER_MODULE_FREEZE_MIN = 1
FREZZER_MODULE_FREEZE_MAX = 6

GRAPPLE_STRENGTH_MIN = 6
GRAPPLE_STRENGTH_MAX = 50
GRAPPLE_RADIUS_MIN = 50
GRAPPLE_RADIUS_MAX = 200
GRAPPLE_SPEED_MIN = 150
GRAPPLE_SPEED_MAX = 250
GRAPPLE_MAXNUMITEM_MIN = 1
GRAPPLE_MAXNUMITEM_MAX = 4
GRAPPLE_MODULES_NUM_MIN = 0
GRAPPLE_MODULES_NUM_MAX = 2
GRAPPLE_MASS_MIN = 10
GRAPPLE_MASS_MAX = 40
GRAPPLE_CONDITION_MIN = 100
GRAPPLE_CONDITION_MAX = 1000

GRAPPLE_STRENGTH_WEIGHT = 0.4
GRAPPLE_RADIUS_WEIGHT = 0.3
GRAPPLE_SPEED_WEIGHT = 0.2
GRAPPLE_MAXNUMITEM_WEIGHT = 0.1
GRAPPLE_MODULES_NUM_WEIGHT = 0.1

GRAPPLE_MODULE_STRENGTH_MIN = 0
GRAPPLE_MODULE_STRENGTH_MAX = 20
GRAPPLE_MODULE_RADIUS_MIN = 0
GRAPPLE_MODULE_RADIUS_MAX = 200
GRAPPLE_MODULE_SPEED_MIN = 0
GRAPPLE_MODULE_SPEED_MAX = 80
GRAPPLE_MODULE_MAXNUMITEM_MIN = 0
GRAPPLE_MODULE_MAXNUMITEM_MAX = 1

RADAR_RADIUS_MIN = 3000  # 700
RADAR_RADIUS_MAX = 3000  # 3000
RADAR_MODULES_NUM_MIN = 0
RADAR_MODULES_NUM_MAX = 2
RADAR_MASS_MIN = 10
RADAR_MASS_MAX = 50
RADAR_CONDITION_MIN = 2000
RADAR_CONDITION_MAX = 10000

RADAR_RADIUS_WEIGHT = 0.6
RADAR_MODULES_NUM_WEIGHT = 0.4

RADAR_MODULE_RADIUS_MIN = 0
RADAR_MODULE_RADIUS_MAX = 1200


DRIVE_SPEED_MIN = 50
DRIVE_SPEED_MAX = 150

DRIVE_SPEED_MIN = 400  # debug
DRIVE_SPEED_MAX = 400  # debug

DRIVE_HYPER_MIN = 100 * 20
DRIVE_HYPER_MAX = 400 * 20
DRIVE_MODULES_NUM_MIN = 0
DRIVE_MODULES_NUM_MAX = 2

DRIVE_MASS_MIN = 20
DRIVE_MASS_MAX = 70
DRIVE_CONDITION_MIN = 500
DRIVE_CONDITION_MAX = 2000

DRIVE_SPEED_WEIGHT = 0.4
DRIVE_HYPER_WEIGHT = 0.4
DRIVE_MODULES_NUM_WEIGHT = 0.2

DRIVE_MODULE_SPEED_MIN = 0
DRIVE_MODULE_SPEED_MAX = 100
DRIVE_MODULE_HYPER_MIN = 0
DRIVE_MODULE_HYPER_MAX = 100

PROTECTOR_PROTECTION_MIN = 3
PROTECTOR_PROTECTION_MAX = 30
PROTECTOR_MODULES_NUM_MIN = 0
PROTECTOR_MODULES_NUM_MAX = 2

PROTECTOR_CONDITION_MIN = 2000
PROTECTOR_CONDITION_MAX = 10000
PROTECTOR_MASS_MIN = 20
PROTECTOR_MASS_MAX = 80

PROTECTOR_PROTECTION_WEIGHT = 0.8
PROTECTOR_MODULES_NUM_WEIGHT = 0.2

PROTECTOR_MODULE_PROTECTION_MIN = 0
PROTECTOR_MODULE_PROTECTION_MAX = 20


BAK_FUEL_MIN = 100 * 20
BAK_FUEL_MAX = 400 * 20
BAK_MODULES_NUM_MIN = 0
BAK_MODULES_NUM_MAX = 1

BAK_MASS_MIN = 10
BAK_MASS_MAX = 40
BAK_CONDITION_MIN = 30
BAK_CONDITION_MAX = 100

BAK_FUEL_WEIGHT = 0.7
BAK_MODULES_NUM_WEIGHT = 0.3

BAK_MODULE_FUEL_MIN = 0
BAK_MODULE_FUEL_MAX = 100

DROID_REPAIR_MIN = 1
DROID_REPAIR_MAX = 15
DROID_MODULES_NUM_MIN = 0
DROID_MODULES_NUM_MAX = 2

DROID_MASS_MIN = 10
DROID_MASS_MAX = 50
DROID_CONDITION_MIN = 80
DROID_CONDITION_MAX = 300

DROID_REPAIR_WEIGHT = 0.8
DROID_MODULES_NUM_WEIGHT = 0.2

DROID_MODULE_REPAIR_MIN = 0
DROID_MODULE_REPAIR_MAX = 10

SCANER_SCAN_MIN = 2
SCANER_SCAN_MAX = 40
SCANER_MODULES_NUM_MIN = 0
SCANER_MODULES_NUM_MAX = 2

SCANER_MASS_MIN = 7
SCANER_MASS_MAX = 38
SCANER_CONDITION_MIN = 30
SCANER_CONDITION_MAX = 100

SCANER_SCAN_WEIGHT = 0.7
SCANER_MODULES_NUM_WEIGHT = 0.3

SCANER_MODULE_SCAN_MIN = 0
SCANER_MODULE_SCAN_MAX = 10

LAZER_RADIUS_MIN = 200
LAZER_RADIUS_MAX = 500
LAZER_DAMAGE_MIN = 4
LAZER_DAMAGE_MAX = 20
LAZER_MODULES_NUM_MIN = 0
LAZER_MODULES_NUM_MAX = 2

LAZER_MASS_MIN = 10
LAZER_MASS_MAX = 40
LAZER_CONDITION_MIN = 100
LAZER_CONDITION_MAX = 1000

LAZER_DAMAGE_WEIGHT = 0.4
LAZER_RADIUS_WEIGHT = 0.4
LAZER_MODULES_NUM_WEIGHT = 0.2

LAZER_MODULE_DAMAGE_MIN = 0
LAZER_MODULE_DAMAGE_MAX = 10
LAZER_MODULE_RADIUS_MIN = 0
LAZER_MODULE_RADIUS_MAX = 300

WEAPON_ENERGY_CONSUMPTION_RATE = 1
WEAPON_HEATING_RATE = 1


ROCKET_AMMO_MIN = 20
ROCKET_AMMO_MAX = 40
ROCKET_RADIUS_MIN = 350
ROCKET_RADIUS_MAX = 750
ROCKET_DAMAGE_MIN = 2
ROCKET_DAMAGE_MAX = 12
ROCKET_MODULES_NUM_MIN = 0
ROCKET_MODULES_NUM_MAX = 2

ROCKET_MASS_MIN = 30
ROCKET_MASS_MAX = 60
ROCKET_CONDITION_MIN = 100
ROCKET_CONDITION_MAX = 900

ROCKET_AMMO_WEIGHT = 0.3
ROCKET_DAMAGE_WEIGHT = 0.3
ROCKET_RADIUS_WEIGHT = 0.2
ROCKET_MODULES_NUM_WEIGHT = 0.2


ROCKET_MODULE_AMMO_MIN = 0
ROCKET_MODULE_AMMO_MAX = 10
ROCKET_MODULE_DAMAGE_MIN = 0
ROCKET_MODULE_DAMAGE_MAX = 6
ROCKET_MODULE_RADIUS_MIN = 0
ROCKET_MODULE_RADIUS_MAX = 450

ROCKET_ARMOR = 6
ROCKET_START_SPEED = 200
ROCKET_SPEED_MAX = 300
ROCKET_DELTA_SPEED = 0.5
ROCKET_ANGULAR_SPEED = 1.0
ROCKET_EXISTANCE_TIME = 3 * TURN_TIME


TORPED_AMMO_MIN = 12
TORPED_AMMO_MAX = 24
TORPED_DAMAGE_MIN = 24
TORPED_DAMAGE_MAX = 58
TORPED_RADIUS_MIN = 700
TORPED_RADIUS_MAX = 1200

TORPED_MODULES_NUM_MIN = 0
TORPED_MODULES_NUM_MAX = 2

TORPED_MASS_MIN = 60
TORPED_MASS_MAX = 100
TORPED_CONDITION_MIN = 100
TORPED_CONDITION_MAX = 300


TORPED_ARMOR = ROCKET_ARMOR * 2
TORPED_START_SPEED = ROCKET_START_SPEED / 1.5
TORPED_SPEED_MAX = ROCKET_SPEED_MAX / 1.7
TORPED_DELTA_SPEED = ROCKET_DELTA_SPEED / 1.7
TORPED_EXISTANCE_TIME = ROCKET_EXISTANCE_TIME * 1.7
TORPED_ANGULAR_SPEED = ROCKET_ANGULAR_SPEED / 2.0


VISIBLE_DISTANCE_WITHOUT_RADAR = 150
SPEED_WITHOUT_DRIVE = 1
################# planet #############
STARSYSTEM_TOTAL_NUM = 20

PLANET_PER_SYSTEM_MIN = 3
PLANET_PER_SYSTEM_MAX = 5

PLANET_TOTAL_NUM = PLANET_PER_SYSTEM_MAX * STARSYSTEM_TOTAL_NUM

PLANET_DISTANCE_MIN = 400
PLANET_DISTANCE_MAX = 600
PLANET_SPEED_MIN = 80
PLANET_SPEED_MAX = 120
PLANET_POPULATION_MIN = 6000
PLANET_POPULATION_MAX = 20000


ASTEROID_RADIUS_A_MIN = 200
ASTEROID_RADIUS_A_MAX = 600

ASTEROID_RADIUS_B_MIN = 2000
ASTEROID_RADIUS_B_MAX = 4000

ASTEROID_SPEED_MIN = 200
ASTEROID_SPEED_MAX = 300

ASTEROID_MASS_MIN = 20
ASTEROID_MASS_MAX = 40

ASTEROID_ARMOR_MIN = 5
ASTEROID_ARMOR_MAX = 10
######################################

######################################
SHIP_PER_SYSTEM_MIN = 10
SHIP_PER_SYSTEM_MAX = 15
ENEMY_SHIP_PER_SYSTEM_MIN = 20
ENEMY_SHIP_PER_SYSTEM_MAX = 30

SHIP_INIT_MAX = SHIP_PER_SYSTEM_MAX * STARSYSTEM_TOTAL_NUM
######################################

DOT_SIZE = 8

STAR_DAMAGE_MIN = 1
STAR_DAMAGE_MAX = 10

Z_POS_BACKGROUND = -999
Z_POS_PLANET = -500


def init_new():
    glEnable(GL_TEXTURE_2D)
    glEnable(GL_ALPHA_TEST)

    glBlendFunc(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA)
    glBlendEquation(GL_FUNC_ADD)

    glDisable(GL_LIGHTING)

    glTexEnvi(GL_POINT_SPRITE, GL_COORD_REPLACE, GL_TRUE)

    glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)
    glLoadIdentity()


def init_old():
    glEnable(GL_TEXTURE_2D)
    glEnable(GL_ALPHA_TEST)

    glEnable(GL_BLEND)

    glClearColor(0.0, 0.0, 0.0, 0.0)

    glEnable(GL_COLOR_MATERIAL)
    glColorMaterial(GL_FRONT, GL_AMBIENT_AND_DIFFUSE)

    glEnable(GL_NORMALIZE)
    glEnable(GL_AUTO_NORMAL)

    glEnable(GL_LIGHTING)
    glEnable(GL_LIGHT0)
    glEnable(GL_LIGHT1)

    glShadeModel(GL_SMOOTH)  # most obj files expect to be smooth-shaded

    glBlendFunc(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA)
    glBlendEquation(GL_FUNC_ADD)

    glTexEnvi(GL_POINT_SPRITE, GL_COORD_REPLACE, GL_TRUE)

    glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)
    glLoadIdentity()


pygame.init()
# screen = pygame.display.set_mode((VIEW_WIDTH, VIEW_HEIGHT), OPENGL | DOUBLEBUF | FULLSCREEN, 24)
screen = pygame.display.set_mode((VIEW_WIDTH, VIEW_HEIGHT), OPENGL | DOUBLEBUF)
pygame.display.set_caption(TITLE)
VIEW = view(VIEW_WIDTH, VIEW_HEIGHT)
VIEW.setOrtho()


if OLD_HARDWARE == True:
    init_old()
else:
    init_new()


# Initialize 44KHz 16-bit stereo sound
pygame.mixer.pre_init(44100, -16, 2, 1024 * 4)

COMMON_FONT = glFreeType.font_data("data/font/Test.ttf", 12)

VP_COORD_FONT = glFreeType.font_data("data/font/Test.ttf", 18)
FPS_FONT = VP_COORD_FONT

MAIN_DIR = os.path.split(os.path.abspath(__file__))[0]


# initial view to the center of the galaxy
vpCoordinate_x = 0
vpCoordinate_y = 0
advanceVelocity_x = 0
advanceVelocity_y = 0

# speed of scrolling the world
SCROLL_VELOCITY_X = 20
SCROLL_VELOCITY_Y = 20

TEXT_OFFSET = 25

DISTANCE_BETWEEN_POINTS = 50


# R         #G         #B
BG_COLOR_YELLOW1 = (255 / 255.0, 255 / 255.0, 220 / 255.0)  # yellow
BG_COLOR_YELLOW2 = (255 / 255.0, 255 / 255.0, 220 / 255.0)  # yellow

BG_COLOR_BLUE1 = (220 / 255.0, 255 / 255.0, 255 / 255.0)  # blue
BG_COLOR_BLUE2 = (220 / 255.0, 255 / 255.0, 255 / 255.0)  # blue


COLOR_TOMATO = (255 / 255.0, 99 / 255.0, 71 / 255.0)
COLOR_COMFLOWER_BLUE = (100 / 255.0, 149 / 255.0, 237 / 255.0)
COLOR_SPRING_GREEN = (0 / 255.0, 255 / 255.0, 127 / 255.0)
COLOR_GOLD = (255 / 255.0, 215 / 255.0, 0 / 255.0)
COLOR_ORANGE = (255 / 255.0, 165 / 255.0, 0 / 255.0)
COLOR_MEDIUM_ORCHID = (186 / 255.0, 85 / 255.0, 211 / 255.0)

COLOR_GREY = (209 / 255.0, 209 / 255.0, 209 / 255.0)

COLOR_RED = COLOR_TOMATO
COLOR_BLUE = COLOR_COMFLOWER_BLUE
COLOR_GREEN = COLOR_SPRING_GREEN
COLOR_GOLDENROD = COLOR_GOLD
COLOR_VIOLET = COLOR_MEDIUM_ORCHID


mixer = pygame.mixer
mixer.quit()
pygame.mixer.pre_init(44100, -16, 2)
mixer.init()


# flags begins with <<>planet_SHOW, planet_RENDER>
# reference to objects as <<name_ob>>, <<name_rect>>
# functions renderPlanet(), isRectVisible()
